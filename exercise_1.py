'''Реалізуйте функцію caching_fibonacci, яка створює та використовує кеш для зберігання і
повторного використання вже обчислених значень чисел Фібоначчі.'''

from typing import Callable # Імпортуємо даний модуль тільки для позначення повернення функції

def caching_fibonacci() -> Callable:
    '''Фукція обчислює та кешує фібоначі, містить в собі функцію'''
    cache = dict() # створюємо словник який буде зберігати значення за ключем
    def fibonacci(n: int) -> int:
        '''Функція обчислює фібоначі і повертає результат'''
    # перевіряємо спочатку умови за яких можемо виконати завдання за вже відпрацьованим сценарієм
        if n <= 0:
            return 0
        if n == 1:
            return 1
        if n in cache:
            return cache.get(n)
    # якщо відпрацьованих сценаріїв не знайшолось, рекурсивно обчислюєм фібоначі
        cache[n] = fibonacci(n-1) + fibonacci(n-2)
        return cache.get(n)
    # повертаємо саму функцію, яка і буде викликатись за допомогою змінної
    return fibonacci
